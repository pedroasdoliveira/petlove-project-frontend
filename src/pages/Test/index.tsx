import {
  Box,
  Flex,
  Heading,
  useColorMode,
  useColorModeValue,
  useRadio,
  useRadioGroup,
  HStack,
  FormControl,
  RadioGroup,
  Radio,
  Button,
  Icon,
  Progress,
} from "@chakra-ui/react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import ArrowRight from "../../public/icon/arrow-right.svg";
import * as S from "./style";

function RadioCard(props: any) {
  const { getInputProps, getCheckboxProps } = useRadio(props);

  const input = getInputProps();
  const checkbox = getCheckboxProps();

  return (
    <Box as="label">
      <input {...input} />
      <Box
        {...checkbox}
        cursor="pointer"
        borderWidth="1px"
        borderRadius="md"
        boxShadow="md"
        _checked={{
          bg: "teal.600",
          color: "white",
          borderColor: "teal.600",
        }}
        _focus={{
          boxShadow: "outline",
        }}
        px={5}
        py={3}
      >
        {props.children}
      </Box>
    </Box>
  );
}

const Test: NextPage = () => {
  const options = ["Sim", "Talvez", "Não"];
  const { toggleColorMode } = useColorMode();
  const { getRootProps, getRadioProps } = useRadioGroup({
    name: "framework",
    defaultValue: "react",
    onChange: console.log,
  });

  const group = getRootProps();
  const pageBackground = useColorModeValue("#8e6dd1", "#1d1d31");
  const buttonSendHover = useColorModeValue("#000000", "#fff");
  const buttonColorHover = useColorModeValue("#fff", "#000000");
  const backgroundContent = useColorModeValue("transparent", "#fff");

  return (
    <Flex
      as="section"
      flexDir="column"
      h="100vh"
      maxWidth="2000px"
      bgColor={pageBackground}
      px="50px"
      py="30px"
      justifyContent="space-between"
      onClick={() => toggleColorMode()}
    >
      <Head>
        <title>Test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="./public/favicon.ico" />
      </Head>

      <Flex flexWrap="wrap" gap="20px" justifyContent="center" px="20px">
        <S.ButtonNavItem>1</S.ButtonNavItem>
        <S.ButtonNavItem>2</S.ButtonNavItem>
        <S.ButtonNavItem>3</S.ButtonNavItem>
        <S.ButtonNavItem>4</S.ButtonNavItem>
        <S.ButtonNavItem>5</S.ButtonNavItem>
        <S.ButtonNavItem>6</S.ButtonNavItem>
        <S.ButtonNavItem>7</S.ButtonNavItem>
        <S.ButtonNavItem>8</S.ButtonNavItem>
        <S.ButtonNavItem>9</S.ButtonNavItem>
        <S.ButtonNavItem>10</S.ButtonNavItem>
        <S.ButtonNavItem>11</S.ButtonNavItem>
        <S.ButtonNavItem>12</S.ButtonNavItem>
        <S.ButtonNavItem>13</S.ButtonNavItem>
        <S.ButtonNavItem>14</S.ButtonNavItem>
        <S.ButtonNavItem>15</S.ButtonNavItem>
        <S.ButtonNavItem>16</S.ButtonNavItem>
        <S.ButtonNavItem>17</S.ButtonNavItem>
        <S.ButtonNavItem>18</S.ButtonNavItem>
        <S.ButtonNavItem>19</S.ButtonNavItem>
        <S.ButtonNavItem>20</S.ButtonNavItem>
        <S.ButtonNavItem>21</S.ButtonNavItem>
        <S.ButtonNavItem>22</S.ButtonNavItem>
        <S.ButtonNavItem>23</S.ButtonNavItem>
        <S.ButtonNavItem>24</S.ButtonNavItem>
        <S.ButtonNavItem>25</S.ButtonNavItem>
      </Flex>

      <Flex flexDir="column" justifyContent="center" alignItems="center">
        <Heading color="#fff" textAlign="center" mb="20px">
          Lidera soluções técnicas com excelência e cria planos de contigência
        </Heading>

        <FormControl
          as="fieldset"
          display="flex"
          alignItems="center"
          flexDir="column"
        >
          <RadioGroup defaultValue="none" mb={5}>
            <HStack color="#fff" spacing="60px" {...group}>
              {options.map((value) => {
                const radio = getRadioProps({ value });
                return (
                  <RadioCard key={value} {...radio}>
                    {value}
                  </RadioCard>
                );
              })}
            </HStack>
          </RadioGroup>
          <Button
            bgColor="#5030DD"
            color="#fff"
            letterSpacing="tight"
            _hover={{ background: buttonSendHover, color: buttonColorHover }}
          >
            Next Question{" "}
            <Box ml={2} mt={1}>
              <Image height="15px" src={ArrowRight} />
            </Box>
          </Button>
        </FormControl>
      </Flex>
      <Progress colorScheme="green" size="sm" value={50} mb={5} />
    </Flex>
  );
};

export default Test;
